Nokogiri, oferuje bardzo dobre funckje, ale nie są niestety dla mnie wystarczające, trzeba było stworzyć własne impelementacje rekursywnych funkcji.

Rozdzielanie w przypadku użycie forbidden_words, co mną kierowało, zasady, wytłumaczenie, model klas i obiektów.


Todo:
zastanowić się nad singletonem od nokogiri
rozszczelnić ścisłe połączenie miedzy metodami statycznymi nokogiri a description
załączyć mechanize
spełnic testy
sample sample sample

 git clone git@git.fractalsoft.org:ca -b develop


 Reek:
 dlaczego nie mogę przeprowadzieć dalszej refaktoryzacji

  Ca::Description#fetch_phrases_at refers to value more than self (FeatureEnvy)
  podczas selecta z @hash jako argument |value| - przecierz korzystamy tu z wartości pola klasy, jesst przejrzyste

  Ca::Description#long_phrase_warning refers to features more than self (FeatureEnvy)
  metoda działa na argumencie przekazanym do niego

  Ca::Description#phraze_fail? refers to features more than self (FeatureEnvy)
  feature zmienna petli




  Nokogiri::HTML::NodeSpecyfication declares the class variable @@counter (ClassVariable)
  skoro jest to czemu z tego nie korzystać
