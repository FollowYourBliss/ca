Nokogiri, oferuje bardzo dobre funckje, ale nie są niestety dla mnie wystarczające, trzeba było stworzyć własne impelementacje rekursywnych funkcji.

Rozdzielanie w przypadku użycie forbidden_words, co mną kierowało, zasady, wytłumaczenie, model klas i obiektów.


Todo:
zastanowić się nad singletonem od nokogiri
rozszczelnić ścisłe połączenie miedzy metodami statycznymi nokogiri a description
załączyć mechanize
spełnic testy
sample sample sample

 git clone git@git.fractalsoft.org:ca -b develop



usuniecie komentarzy htmlowskich przed faza analizy

useragent w open pomogl rozwiazac problemy z kodowaniem? wtf w ogole - do zbadadania, ale działą

nefralgiczne:


<tr>
  <td>
    <img align="RIGHT" src="./another_coding_files/kula.gif" width="32" height="27" alt="* ">
  </td>
  <td>
    <b>
      <a href="http://www.poland.com/polska/">
        Poland.com
      </a>
    </b>
  </td>
  <td>
    <img align="RIGHT" src="./another_coding_files/kula.gif" width="32" height="27" alt="* ">
  </td>
  <td>
    <b>
      <a href="http://www.insidepoland.com.pl/">
        Inside Poland
      </a>
    </b>
  </td>
</tr>


to nie działa
pomysł - zmienić kropki na brak odstępu
wniosek - jesteś geniuszem


na podstawie fixtures seo_text przygotować testy i je spełnić
zastanowić się jakie przedziały wartości ochylenia standardowego przyjąć dla tekstu - z uwzględnieniem wartości frequency


pamiętać
<p><b>Dziennik Ali</b>:</p>


testowanie csv